name: CI/CD Pipeline

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  push:
    branches: ['main']
    paths-ignore: ['docs/**']
  pull_request:
    branches: ['main']

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  linter:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'


  test_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Build and start services with Docker Compose
        env:
          MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        run: |
          docker compose -f docker/docker-compose.yml

     # - name: Run Liquibase Migrations
     #   env:
     #     POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
     #     POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      #  run: |
      #    docker compose -f Docker/docker-compose.yml run --rm app mvn test  # Run Maven tests

      - name: Run Maven Tests
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        run: |
          
          docker compose -f docker/docker-compose.yml run --rm app mvn test  # Run Maven tests




      - name: Tear down Docker stack
        run: |
          cd Docker
          docker-compose down
